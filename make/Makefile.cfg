# 这个Makefile是用来进行配置的


# 源代码目录
SRC_DIR			=	./src
# 构建目录
ifeq ($(ARCH), WIN32)
BUILD_DIR		=	./.build/win32
else
BUILD_DIR		=	./.build/xxnux
endif
# 头文件目录
INC_DIRS		=	./include ./libs
# 最终目标文件名称
TARGET_BIN		=	./bin/libmrp
# 第三方库构建的目录
THIRD_DIR		=	$(BUILD_DIR)/.libs
# 生成最终目标时使用的flag
LINK_FLAGS		=	
#-m64
# 链接时要用到的库文件
LINK_LIBS		=	-lm -lz

# 中间代码，这些文件位于BUILD_DIR目录下，并且名称和Makefile后缀名称一致
OBJ_FILES		=	arm.o mrp.o utils.o helper.o
# //zlib.o

# 编译器配置
CC_FLAGS		=  $(addprefix -I, $(INC_DIRS)) -std=c11 
#-m64

#windows
ifeq ($(ARCH), WIN32)
	LD						=	/mnt/c/MinGW/bin/ld.exe
	CC						=	/mnt/c/MinGW/bin/gcc.exe
else
	LD						?=	ld
	CC						?=	gcc
endif

# 是否启用debug
ifeq ($(DEBUG), TRUE)
	CC_FLAGS		+=	-g
else
	CC_FLAGS		+= -O3 -Wno-unused-result -Wno-stringop-overflow
endif

# 动态链接库编译
ifeq ($(TYPE), SHARED)
	LINK_FLAGS	+= -shared

ifeq ($(ARCH), WIN32)
	TARGET_BIN	:=	$(addsuffix .dll, $(TARGET_BIN))
else
	LINK_FLAGS	+=	-fPIC
	CC_FLAGS	+=	-fPIC
	TARGET_BIN	:=	$(addsuffix .so, $(TARGET_BIN))
endif

# 静态链接库编译
ifeq ($(TYPE), STATIC)

ifeq ($(ARCH), WIN32)
	TARGET_BIN	:=	$(addsuffix .lib, $(TARGET_BIN))
else
	TARGET_BIN	:=	$(addsuffix .a, $(TARGET_BIN))
endif
endif

else ifeq ($(TYPE), DESKTOP)
	OBJ_FILES	+=	desktop.o
	LINK_LIBS	+=	-lSDL2 -lSDL2_ttf -lpthread -lm
ifeq ($(ARCH), WIN32)
	INC_DIRS	+=	C:\\SDL2\\include
	LINK_FLAGS	+=	-LC:\\SDL2\\lib
	LINK_LIBS	+=	-lmingw32
endif

endif